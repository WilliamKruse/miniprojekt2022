@page "/pedelside"
@using miniprojekt2022.Client.Services;
@using miniprojekt2022.Shared.Models;

<PageTitle>Pedel Side</PageTitle>

<h1>Oversigt over shelter bookings</h1>

<EditForm EditContext="@EditContext" class="row p-3"
          OnValidSubmit="@FilterShelterId"
          OnInvalidSubmit="@HandleInvalidSubmit">
    <DataAnnotationsValidator />

    <div class="col-md-4 mb-3">
        <InputText id="ShelterId" placeholder="Shelter id" @bind-Value="BookItem.ShelterId" class="form-control" />
        <ValidationMessage For="@(() => BookItem.ShelterId)" />
    </div>
    <div class="col-12 mb-3">
        <button type="submit" class="btn btn-primary">Filter</button>
    </div>

</EditForm>

<table style="width:100%">
    <thead>
        <tr>
            <th>Kunde navn</th>
            <th>Email</th>
            <th>Telefon nr.</th>
            <th>Shelter id</th>
            <th>Start dato</th>
            <th>Slut dato</th>
            <th>Handlinger</th>
        </tr>
    </thead>

    <!--går igennem Bookings og laver en tabel-->
    <tbody>
        @foreach (var item in Bookings)
        {
            <tr>
                <td>@item.KundeNavn</td>
                <td>@item.Email</td>
                <td>@item.Telefon</td>
                <td>@item.ShelterId</td>
                <!--.Value gør at den ignorer ?nullable values. ToShortDate gør datetime om til dato-->
                <td>@item.StartDato.Value.AddHours(3).ToShortDateString()</td>
                <td>@item.SlutDato.Value.AddHours(3).ToShortDateString()</td>
                <td><button class="btn delete"><span class="oi oi-trash"></span></button></td>
            </tr>

        }
    </tbody>
</table>



@code {
    public BookingItem BookItem = new BookingItem();
    public List<BookingItem> Bookings = new List<BookingItem>();
    public int ErrorCode { get; set; } = 0;
    private EditContext EditContext;


    // Bruges til at erklære, at man vil bruge sin service
    [Inject]
    public IShelterService Service { get; set; }

    // Nu bruger vi vores service ved hjælp af en override metode
    protected override async Task OnInitializedAsync()
    {
        Bookings = (await Service.GetAllBookings()).ToList();
    }

    //laver ny edit context objekt når siden starter, modelerer ud fra objektet Bookitem
    protected override void OnInitialized()
    {
        EditContext = new EditContext(BookItem);
    }

    //sender fejlmeddelse i console hvis validering ikke er valid
    public void HandleInvalidSubmit()
    {
        Console.WriteLine("Fejl");
    }

    //virker ikke som det skal
    public void FilterShelterId()
    {
        var FilterBookings = new List<BookingItem>();

        foreach (var item in Bookings)
        {
            if (item.ShelterId == BookItem.ShelterId)
            {
                FilterBookings.Add(item);
            }
        }
    
    }
}